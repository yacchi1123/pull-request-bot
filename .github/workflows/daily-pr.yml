name: Daily PR from develop to master

on:
  schedule:
    # 平日（月-金）の深夜0:00（日本時間）に実行
    # UTCでは前日の15:00（日本時間との差は+9時間）
    # 曜日は1-5で月-金を表す
    - cron: '0 15 * * 1-5'
  
  # 手動実行も可能に
  workflow_dispatch:

# ワークフローレベルで環境変数を定義
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  prepare-pr-data:
    runs-on: ubuntu-latest
    outputs:
      has_diff: ${{ steps.check_diff.outputs.has_diff }}
      pr_exists: ${{ steps.check_pr.outputs.pr_exists }}
      existing_pr_number: ${{ steps.check_pr.outputs.existing_pr_number }}
      pr_body_file: ${{ steps.generate_body.outputs.pr_body_file }} # Use the correct output name
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for git log/diff
      
      - name: Check for differences between develop and master
        id: check_diff
        run: |
          # ブランチの差分を確認
          if [ $(git rev-list --count origin/master..origin/develop) -gt 0 ]; then
            echo "has_diff=true" >> $GITHUB_OUTPUT
            echo "Differences found between origin/master and origin/develop."
          else
            echo "has_diff=false" >> $GITHUB_OUTPUT
            echo "No differences found between origin/master and origin/develop. Skipping."
          fi
      
      - name: Get included PRs
        id: get_prs
        if: steps.check_diff.outputs.has_diff == 'true'
        run: |
          # developに取り込まれたPRの一覧を取得
          PR_LIST=$(git log origin/master..origin/develop --pretty=format:"%s" | grep -o "#[0-9]\+" | sort -u)
          
          # PR情報を取得してマークダウン形式でリスト化
          PR_LIST_MD=""
          for PR_NUM in $PR_LIST; do
            PR_LIST_MD="$PR_LIST_MD\n- $PR_NUM"
          done
          
          # ステップ内で使用するため一時ファイルに保存
          echo -e "$PR_LIST_MD" > PR_LIST.md
          echo "PR list saved to PR_LIST.md"
      
      - name: Check for existing PR
        id: check_pr
        if: steps.check_diff.outputs.has_diff == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          EXISTING_PR=$(gh pr list --base master --head develop --json number --jq '.[0].number')
          if [ -n "$EXISTING_PR" ]; then
            echo "Found existing PR: $EXISTING_PR"
            echo "existing_pr_number=$EXISTING_PR" >> $GITHUB_OUTPUT
            echo "pr_exists=true" >> $GITHUB_OUTPUT
          else
            echo "No existing PR found"
            echo "existing_pr_number=''" >> $GITHUB_OUTPUT # Ensure output is set
            echo "pr_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate PR Body from template
        id: generate_body
        if: steps.check_diff.outputs.has_diff == 'true'
        run: |
          echo "Generating PR body using template..."
          PR_BODY_FILE="pr_body_content.md" # Define filename
          PR_LIST_FILE="PR_LIST.md" # Use file from previous step
          CREATED_AT=$(date +"%Y-%m-%d %H:%M:%S")

          # Ensure PR_LIST_FILE exists if generated
          if [ ! -f $PR_LIST_FILE ]; then
              echo "Warning: $PR_LIST_FILE not found. Creating empty file."
              touch $PR_LIST_FILE
          fi

          # テンプレートを読み込み、sedで置換と挿入を行う
          sed -e "s|{{CREATED_AT}}|$CREATED_AT|" -e "/{{PR_LIST}}/r $PR_LIST_FILE" -e "/{{PR_LIST}}/d" .github/workflows/RELEASE_WORKFLOW_TEMPLATE.md > $PR_BODY_FILE
          echo "Generated PR body file: $PR_BODY_FILE"

          # Set filename for output - Use 'pr_body_file' as the name
          echo "pr_body_file=$PR_BODY_FILE" >> $GITHUB_OUTPUT

      - name: Upload PR body as artifact
        if: steps.check_diff.outputs.has_diff == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: pr-body-artifact
          path: ${{ steps.generate_body.outputs.pr_body_file }} # Use the step output directly

      - name: Cleanup local temporary files
        if: always() && steps.check_diff.outputs.has_diff == 'true'
        run: |
          echo "Cleaning up local temporary files..."
          rm -f PR_LIST.md pr_body_content.md

  call-update-pr:
    needs: prepare-pr-data
    if: needs.prepare-pr-data.outputs.has_diff == 'true' && needs.prepare-pr-data.outputs.pr_exists == 'true'
    uses: ./.github/workflows/update-pr.yml
    with:
      pr-number: ${{ needs.prepare-pr-data.outputs.existing_pr_number }}
      pr-body-file: ${{ needs.prepare-pr-data.outputs.pr_body_file }}
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  call-create-pr:
    needs: prepare-pr-data
    if: needs.prepare-pr-data.outputs.has_diff == 'true' && needs.prepare-pr-data.outputs.pr_exists == 'false'
    uses: ./.github/workflows/create-pr.yml
    with:
      pr-title: "【自動生成】developからmasterへのマージ"
      pr-body-file: ${{ needs.prepare-pr-data.outputs.pr_body_file }}
      base-branch: "master"
      head-branch: "develop"
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }} 