name: Daily PR from develop to master

on:
  schedule:
    # 平日（月-金）の深夜0:00（日本時間）に実行
    # UTCでは前日の15:00（日本時間との差は+9時間）
    # 曜日は1-5で月-金を表す
    - cron: '0 15 * * 1-5'
  
  # 手動実行も可能に
  workflow_dispatch:

# ワークフローレベルで環境変数を定義
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Check for differences between develop and master
        id: check_diff
        run: |
          # ブランチの差分を確認
          if [ $(git rev-list --count master..develop) -gt 0 ]; then
            echo "HAS_DIFF=true" >> $GITHUB_ENV
          else
            echo "HAS_DIFF=false" >> $GITHUB_ENV
          fi
      
      - name: Get included PRs
        id: get_prs
        if: env.HAS_DIFF == 'true'
        run: |
          # developに取り込まれたPRの一覧を取得
          # コミットメッセージ(件名)にPR番号があるものを抽出
          PR_LIST=$(git log master..develop --pretty=format:"%s" | grep -o "#[0-9]\+" | sort -u)
          
          # PR情報を取得してマークダウン形式でリスト化
          PR_BODY=""
          for PR_NUM in $PR_LIST; do
            PR_ID=${PR_NUM//#/}
            if [ -n "$PR_ID" ]; then
              PR_INFO=$(gh pr view $PR_ID --json title,number,url --jq '.title, .number, .url' 2>/dev/null || echo "")
              if [ -n "$PR_INFO" ]; then
                PR_TITLE=$(echo "$PR_INFO" | head -1)
                PR_URL=$(echo "$PR_INFO" | tail -1)
                PR_BODY="$PR_BODY\n- [$PR_TITLE]($PR_URL) ($PR_NUM)"
              fi
            fi
          done
          
          # 環境変数に設定（複数行の場合はデリミタの設定が必要）
          {
            echo "PR_BODY<<EOF"
            echo -e "$PR_BODY"
            echo "EOF"
          } >> $GITHUB_ENV
      
      - name: Check for existing PR
        id: check_pr
        if: env.HAS_DIFF == 'true'
        run: |
          EXISTING_PR=$(gh pr list --base master --head develop --json number --jq '.[0].number')
          if [ -n "$EXISTING_PR" ]; then
            echo "Found existing PR: $EXISTING_PR"
            echo "EXISTING_PR=$EXISTING_PR" >> $GITHUB_ENV
            echo "PR_EXISTS=true" >> $GITHUB_ENV
          else
            echo "No existing PR found"
            echo "PR_EXISTS=false" >> $GITHUB_ENV
          fi
      
      - name: Update existing PR
        if: env.HAS_DIFF == 'true' && env.PR_EXISTS == 'true'
        run: |
          # 既存のPRを更新（コメントを追加）
          CURRENT_DATE=$(date +"%Y-%m-%d")
          
          # 既存PRの本文を取得
          CURRENT_BODY=$(gh pr view ${{ env.EXISTING_PR }} --json body --jq '.body')
          
          # 更新内容を追加
          echo "${CURRENT_BODY}" > pr_body.txt
          echo "" >> pr_body.txt
          echo "## 更新: ${CURRENT_DATE}" >> pr_body.txt
          echo "" >> pr_body.txt
          echo "### 含まれるプルリクエスト:" >> pr_body.txt
          echo "${{ env.PR_BODY }}" >> pr_body.txt
          
          # PRを更新
          gh pr edit ${{ env.EXISTING_PR }} --body-file pr_body.txt
          
          # コメントも追加
          gh pr comment ${{ env.EXISTING_PR }} --body "$(date +"%Y-%m-%d %H:%M:%S") に自動更新されました。新たな変更が検出されました。"
      
      - name: Create new Pull Request
        if: env.HAS_DIFF == 'true' && env.PR_EXISTS == 'false'
        run: |
          # PRの本文を作成
          PR_BODY_FILE="pr_body.txt"
          cat << EOF > $PR_BODY_FILE
          ## 日次マージプルリクエスト
          
          このプルリクエストはGitHub Actionsにより自動生成されました。
          developブランチの変更をmasterブランチにマージします。
          
          生成日時: $(date +"%Y-%m-%d %H:%M:%S")
          
          ### 含まれるプルリクエスト:
          ${{ env.PR_BODY }}
          EOF
          
          # PRを作成
          gh pr create \
            --title "【自動生成】developからmasterへの日次マージ" \
            --body-file $PR_BODY_FILE \
            --base master \
            --head develop 